//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package fulfillment

import "time"

type AADIdentifier struct {
	EmailID *string
	ObjectID *string
	Puid *string
	TenantID *string
}

type InternalServerErrorResponse struct {
	Error *InternalServerErrorResponseError
}

type InternalServerErrorResponseError struct {
	Code *string
	Message *string
}

type MeteringDimension struct {
	Currency *string
	DisplayName *string
	ID *string
	PricePerUnit *float32
	UnitOfMeasure *string
}

type MeteringedQuantityIncluded struct {
	DimensionID *string
	Units *string
}

type Operation struct {
	Action *OperationActionEnum
	ActivityID *string
	ID *string
	OfferID *string
	PlanID *string
	PublisherID *string
	Quantity *int32
	Status *OperationStatusEnum
	SubscriptionID *string
	TimeStamp *time.Time
}

type OperationList struct {
	Operations []*Operation
}

// OperationsClientActivateSubscriptionOptions contains the optional parameters for the OperationsClient.ActivateSubscription
// method.
type OperationsClientActivateSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientDeleteSubscriptionOptions contains the optional parameters for the OperationsClient.DeleteSubscription
// method.
type OperationsClientDeleteSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientGetSubscriptionOptions contains the optional parameters for the OperationsClient.GetSubscription method.
type OperationsClientGetSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientListAvailablePlansOptions contains the optional parameters for the OperationsClient.ListAvailablePlans
// method.
type OperationsClientListAvailablePlansOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientListSubscriptionsOptions contains the optional parameters for the OperationsClient.NewListSubscriptionsPager
// method.
type OperationsClientListSubscriptionsOptions struct {
	// Optional value, only used for ListSubscriptions.
	ContinuationToken *string
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientResolveOptions contains the optional parameters for the OperationsClient.Resolve method.
type OperationsClientResolveOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// OperationsClientUpdateSubscriptionOptions contains the optional parameters for the OperationsClient.UpdateSubscription
// method.
type OperationsClientUpdateSubscriptionOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

type Plan struct {
	Description *string
	DisplayName *string
	HasFreeTrials *bool
	IsPricePerSeat *bool
	IsPrivate *bool
	IsStopSell *bool
	Market *string
	PlanComponents *PlanComponents
	PlanID *string
}

type PlanComponents struct {
	MeteringDimensions []*MeteringDimension
	RecurrentBillingTerms []*RecurrentBillingTerm
}

type RecurrentBillingTerm struct {
	Currency *string
	MeteredQuantityIncluded []*MeteringedQuantityIncluded
	Price *float32
	TermDescription *string
	TermUnit *TermUnitEnum
}

// ResolvedSubscription - Summary of the subscription
type ResolvedSubscription struct {
	ID *string
	OfferID *string
	PlanID *string
	Quantity *int64
	Subscription *Subscription
	SubscriptionName *string
}

type SubscriberPlan struct {
	PlanID *string
	Quantity *int64
}

type Subscription struct {
	AllowedCustomerOperations []*AllowedCustomerOperationsEnum

	// Indicating whether the subscription will renew automatically.
	AutoRenew *bool
	Beneficiary *AADIdentifier
	Created *time.Time
	FulfillmentID *string
	ID *string

	// true - the customer subscription is currently in free trial, false - the customer subscription is not currently in free
// trial.(optional field - default false)
	IsFreeTrial *bool

	// Indicating whether the current subscription is a test asset.
	IsTest *bool
	Name *string
	OfferID *string
	PlanID *string
	PublisherID *string
	Purchaser *AADIdentifier
	Quantity *int32

	// Indicates the status of the operation.
	SaasSubscriptionStatus *SubscriptionStatusEnum

	// Possible Values are None, Csp (Csp sandbox purchase)
	SandboxType *SandboxTypeEnum
	SessionID *string

	// Dry Run indicates all transactions run as Test-Mode in the commerce stack
	SessionMode *SessionModeEnum
	StoreFront *string
	Term *SubscriptionTerm
}

// SubscriptionOperationsClientGetOperationStatusOptions contains the optional parameters for the SubscriptionOperationsClient.GetOperationStatus
// method.
type SubscriptionOperationsClientGetOperationStatusOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// SubscriptionOperationsClientListOperationsOptions contains the optional parameters for the SubscriptionOperationsClient.ListOperations
// method.
type SubscriptionOperationsClientListOperationsOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

// SubscriptionOperationsClientUpdateOperationStatusOptions contains the optional parameters for the SubscriptionOperationsClient.UpdateOperationStatus
// method.
type SubscriptionOperationsClientUpdateOperationStatusOptions struct {
	// A unique string value for operation on the client. This parameter correlates all events from client operation with events
// on the server side. If this value isn't provided, one will be generated and
// provided in the response headers.
	CorrelationID *string
	// A unique string value for tracking the request from the client, preferably a GUID. If this value isn't provided, one will
// be generated and provided in the response headers.
	RequestID *string
}

type SubscriptionPlans struct {
	Plans []*Plan
}

type SubscriptionTerm struct {
	EndDate *time.Time
	StartDate *time.Time
	TermUnit *TermUnitEnum
}

type SubscriptionsResponse struct {
	// Link to get the next set of subscriptions.
	NextLink *string
	Subscriptions []*Subscription
}

type UpdateOperation struct {
	PlanID *string
	Quantity *int64
	Status *UpdateOperationStatusEnum
}

